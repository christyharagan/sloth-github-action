"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.pack = void 0;
const memfs_1 = require("memfs");
const fs = __importStar(require("fs"));
const path = __importStar(require("path"));
const webpack_1 = __importDefault(require("webpack"));
const unionfs_1 = require("unionfs");
const join_1 = __importDefault(require("memory-fs/lib/join"));
const normalize_1 = __importDefault(require("memory-fs/lib/normalize"));
unionfs_1.ufs.use(fs);
function pack(code, is_src, is_dev) {
    const memfs = new memfs_1.Volume();
    const out_fs = new memfs_1.Volume();
    out_fs.join = join_1.default;
    out_fs.normalize = normalize_1.default;
    memfs.writeFileSync('/in.js', code, { encoding: 'utf8' });
    unionfs_1.ufs.use(memfs);
    let compiler = webpack_1.default({
        mode: is_dev ? 'development' : 'production',
        entry: {
            app: '/in.js'
        },
        externals: ['aws-sdk', 'lodash', 'atob', 'btoa', 'form-data', 'crypto', 'events', 'stream', 'node-fetch', 'oauth', 'xml'],
        output: {
            libraryTarget: 'var',
            library: 'webpack',
            path: '/',
            filename: './out.js'
        },
        context: process.cwd(),
        resolve: {
            modules: [path.join(process.cwd(), './node_modules')]
        }
    });
    compiler.inputFileSystem = unionfs_1.ufs;
    compiler.outputFileSystem = out_fs;
    return new Promise((resolve, reject) => {
        compiler.run((err, stats) => {
            if (stats.hasErrors()) {
                reject(stats.toJson('verbose').errors);
            }
            else if (err) {
                reject(err);
            }
            else {
                resolve(is_dev ? out_fs.readFileSync('/out.js', { encoding: 'utf8' }) : `var lodash = _;
var crypto = Crypto;
var aws_sdk = AWS;
var form_data = FormData;
var oauth = OAuth;
        ` + out_fs.readFileSync('/out.js', { encoding: 'utf8' })
                    .replace(/module\.exports \= aws\-sdk/, 'module.exports = aws_sdk')
                    .replace(/module\.exports \= form\-data/, 'module.exports = form_data') + (is_src ? `
onRequest = webpack['onRequest']` : `
onTrack = webpack['onTrack']
onAlias = webpack['onAlias']
onIdentify = webpack['onIdentify']
onGroup = webpack['onGroup']
onPage = webpack['onPage']
onScreen = webpack['onScreen']`));
            }
        });
    });
}
exports.pack = pack;
//# sourceMappingURL=webpack.js.map