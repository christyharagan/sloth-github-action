"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.save_settings = exports.load_settings = exports.get_settings_file = exports.get_deploy_file = exports.get_source_file = void 0;
const yaml_1 = __importDefault(require("yaml"));
const fs = __importStar(require("fs-extra"));
const path = __importStar(require("path"));
require("segment-typescript-definitions/common");
require("segment-typescript-definitions/custom-source");
require("segment-typescript-definitions/custom-destination");
function get_source_file(settings) {
    return path.join(process.cwd(), 'src', settings.language == 'javascript' ? 'function.js' : 'function.ts');
}
exports.get_source_file = get_source_file;
function get_deploy_file(settings) {
    return path.join(process.cwd(), settings.language == 'javascript' ? 'src' : 'out', 'function.js');
}
exports.get_deploy_file = get_deploy_file;
function get_settings_file(dir) {
    return path.join(dir || process.cwd(), 'sloth.yaml');
}
exports.get_settings_file = get_settings_file;
async function load_settings(file) {
    let f = await fs.readFile(file, 'utf8');
    return yaml_1.default.parse(f);
}
exports.load_settings = load_settings;
async function save_settings(file, settings) {
    await fs.writeFile(file, yaml_1.default.stringify(settings), 'utf8');
}
exports.save_settings = save_settings;
//# sourceMappingURL=settings.js.map