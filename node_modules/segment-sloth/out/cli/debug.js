"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.debug = void 0;
const ngrok_1 = require("../ngrok");
const settings_1 = require("../settings");
const server_1 = require("../server");
const sam_1 = require("../sam");
const __1 = require("..");
async function debug(type, access_token, tunnel) {
    let settings = await settings_1.load_settings(settings_1.get_settings_file());
    let debug_url;
    if ((type == 'remote' || type == 'segment') && !tunnel && settings.proxy_port && settings.use_ngrok) {
        [debug_url] = await ngrok_1.launch(settings.proxy_port);
        console.log('Local instance publicly available at: ' + debug_url);
    }
    if ((type == 'segment') && !(debug_url || tunnel)) {
        console.error('No public URL available for running this type of debug instance (' + type + ')');
        return;
    }
    if (type == 'segment') {
        if (!settings.work_id) {
            console.error('Workspace ID must be provided for running this type of debug instance (' + type + ')');
            return;
        }
        if (!settings.access_token && !access_token) {
            console.error('Access token must be provided for running this type of debug instance (' + type + ')');
            return;
        }
        __1.deploy(false, access_token, undefined, undefined, undefined, debug_url || tunnel);
    }
    if (type == 'remote' || type == 'segment') {
        await server_1.server(settings);
    }
    sam_1.run_exec(settings, true);
}
exports.debug = debug;
//# sourceMappingURL=debug.js.map