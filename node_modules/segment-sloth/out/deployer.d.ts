import { Settings } from './settings';
export declare function get_js(settings: Settings): Promise<string>;
export declare type RequiredFunctionSetting = 'map' | 'boolean' | 'array' | 'string' | 'secret' | {
    type: 'map' | 'boolean' | 'array' | 'string' | 'secret';
    description: string;
};
export declare type RequiredFunctionSettings = {
    [K: string]: RequiredFunctionSetting;
};
export declare type OptionalFunctionSettings = {
    [K: string]: 'string' | 'secret' | {
        type: 'string' | 'secret';
        description: string;
    };
};
export declare function deploy_source(settings: Settings, is_dev: boolean, req_fn_settings?: RequiredFunctionSettings, op_fn_settings?: OptionalFunctionSettings, access_token?: string, work_slug?: string, work_id?: string, debug_url?: string, out_file?: string): Promise<void>;
export declare function deploy_destination(settings: Settings, is_dev: boolean, req_fn_settings?: RequiredFunctionSettings, op_fn_settings?: OptionalFunctionSettings, access_token?: string, work_slug?: string, work_id?: string, debug_url?: string, out_file?: string): Promise<void>;
export declare type BuildFunctionSetting = {
    name: string;
    label: string;
    type: 'string' | 'boolean' | 'text-map' | 'array';
    description?: string;
    required?: boolean;
    sensitive?: boolean;
};
export declare type BuildFunctionSettings = BuildFunctionSetting[];
export declare function build_function(fn_name: string, is_src: boolean, work_slug: string, work_id: string, code: string, access_token: string, settings?: BuildFunctionSettings, dont_overwrite?: true): Promise<string | false>;
