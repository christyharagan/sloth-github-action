import 'segment-typescript-definitions/common';
import 'segment-typescript-definitions/custom-source';
import 'segment-typescript-definitions/custom-destination';
export declare type SrcFn = (request: SegmentSourceRequest, settings: SegmentSettings) => Promise<void>;
export declare type DestFns = {
    onAlias?: (event: SegmentAliasEvent, settings: SegmentSettings) => Promise<void>;
    onScreen?: (event: SegmentScreenEvent, settings: SegmentSettings) => Promise<void>;
    onPage?: (event: SegmentPageEvent, settings: SegmentSettings) => Promise<void>;
    onIdentify?: (event: SegmentIdentifyEvent, settings: SegmentSettings) => Promise<void>;
    onTrack?: (event: SegmentTrackEvent, settings: SegmentSettings) => Promise<void>;
    onGroup?: (event: SegmentGroupEvent, settings: SegmentSettings) => Promise<void>;
};
export declare type Settings = {
    language: 'typescript' | 'javascript';
    fn_name: string;
    fn_type: 'source' | 'destination';
    work_slug?: string;
    work_id?: string;
    access_token?: string;
    access_token_is_saved?: boolean;
    tp_name?: string;
    debug_port: number;
    sam_port: number;
    proxy_port?: number;
    use_ngrok?: boolean;
    github_deployment?: boolean;
    generate_tests: boolean;
};
export declare function get_source_file(settings: Settings): string;
export declare function get_deploy_file(settings: Settings): string;
export declare function get_settings_file(dir?: string): string;
export declare function load_settings(file: string): Promise<Settings>;
export declare function save_settings(file: string, settings: Settings): Promise<void>;
